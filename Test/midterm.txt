1. 결측 데이터를 처리하기 위한 전처리 방안
- 제거(컬럼 자체를 삭제, 레코드 단위 삭제)
- 대치(기초 통계 정보를 사용. 평균, 최빈값, 중앙값...)
- 지도학습 기반 대치(머신러닝을 적용)
- 비/준지도학습 기반 대치(머신러닝을 적용)

2. 선형회귀 분석을 위한 LinearRegression 클래스의 장점과 단점
- 장점 : 데이터에 과적합 되어 높은 학습 성능을 가질 수 있으므로 제약 조건이 추가된 Ridge, Lasso 클래스의 결과에 대해서 기준값이 될 수 있음
- 단점 : 데이터에 과적합 되는 경향을 보이므로 특정 특성에 대해서 민감한 모델이 생성될 수 있음(가중치가 높은 컬럼에 대해서)

3. 정밀도와 재현율
- 정밀도 : 머신러닝 모델이 예측한 값의 정답 비율
- 재현율 : 실제 데이터에서 머신러닝 모델이 정담으로 예측한 값의 비율
- 정밀도와 재현율을 각 클래스 별로 계산될 수 있음

4. 앙상블의 대표적인 방법 취합과 부스팅
- 앙상블 : 다수개의 머신러닝 모델을 결합하여 하나의 예측값을 반환하는 방법
- 취합 : 앙상블을 구현하는 각각의 모델들이 독립적으로 동작하며, 각 모델들의 상관관계가 0인 앙상블 구현 방법
          (특정 모델의 예측치는 다른 모델의 예측치에 영향x. 즉, 독립적 모델). 각 하위 모델에 대해서 최대한 강하게 학습
          Voting, Bagging, RandomForest
- 부스팅 : 앙상블을 구현하는 각각의 하위 모델들이 선형으로 결합되어 점차적으로 성능을 향상시켜 나가는 방법
             (앞선 모델의 예측 오차에 대해서 보정해나가는 앙상블 기법). 각 하위 모델에 대해서 강한 제약을 준다
             AdaBoost, GradientBoosting

5. 이상 거래 인식을 위한 선형 분류 모델을 학습시킨 결과 거래금액, 거래지역, 시간대의 특성에 대해서 -7.515, 5.139, 0.345의 가중치 결과가 반환.
   해당 선형 모델의 예측 값 계산 공식을 작성하고 가중치 분석 결과를 작성
- y = [거래금액] * (-7.515) + [거래지역] * 5.139 + [시간대] * 0.345
- 위 값이 0보다 크면 양성. 0보다 작으면 음성
- 이상거래 인식을 위해서 사용한 컬럼 중 중요도의 순으로 나열하면 거래금액>거래지역>시간대 순이다(가중치의 절대값을 보고 판단)
- 이상거래는 높은 거래 금액에서 발생될 가능성이 높고, 특정 거래 지역에서 발생할 가능성이 높다.

6. 범주형 특성의 전처리 방법
- 라벨 인코딩 : 범주형을 구성하는 데이터의 중복을 제거한 후, 각 데이터에 대해서 정수 값을 할당하고, 전체 데이터를 정수 값으로 치환.
                   일반적으로 정답 데이터에 적용. 설명변수 X에 라벨 인코딩을 적용하는 경우 해당 컬럼은 대소의 비교가 가능해야함.
- 원핫 인코딩 : 범주형을 구성하는 데이터의 중복을 제거한 후, 각 데이터에 대해서 새로운 컬럼을 할당하여 다른 컬럼의 값은 0으로, 해당 컬럼의 값은 1로 대치.
                   일반적으로 설명변수에 적용하는 경우가 많음. CNN과 같은 딥러닝에서 종속변수에 사용할 수 있음.

7. 머신러닝 모델의 학습에 사용되는 데이터를 학습과 테스트로 분할하는 목적과 기대효과
- 분할 목적 : 머신러닝 모델의 학습 이후 일반화 성능을 측정하기 위한 용도로 데이터를 학습과 테스트 데이터로 분할.
- 기대효과 : 학습에서 사용되지 않은 테스트 데이터에 대한 성능을 바탕으로 미래의 데이터에 대한 기대치를 설정할 수 있음.

8. 위험 인물에 대한 정밀도 값을 중요시하여 경비 비용 절감

9. 클래스 불균형을 해결하기 위한 방법
- 오버 샘플링 : 개수가 적은 클래스의 데이터를 개수가 많은 클래스의 데이터 개수와 유사한 수준으로 늘리는 방법(단순복사, 통계기반, 클러스터링 기반 기법 활용)
- 언더 샘플링 : 개수가 많은 클래스의 데이터를 개수가 작은 클래스의 데이터 개수와 유사하도록 랜덤 삭제
- 가중치 조절 : 개수가 많은 클래스의 데이터 가중치를 감소시키고, 데이터의 개수가 적은 클래스의 가중치를 증가시켜 유사한 오차 값을 발생시키도록 제어.

